//Chinmay Satpanthi
//A02.gpl
//CSCI 515
//8-30-21

//function initialization
forward animation move(circle head);

//variable initializations
int window_width = 500;
int window_height = 300;
int counter = 0;
int speed = 3;
int user_int = 0;
int user_int2 = 0;
int box_w = window_width - 50;
int box_h = window_height - 50;
int edge_bottom = 10;
int edge_left = 25;
int edge_right = 445;
int edge_top = 230;
int max_tail_count = 500;
int tail_count = 5;
int i = 0;
int eye1_x = 17;
int eye1_y = 21;
int eye2_x = 17;
int eye2_y = 3;

//tail array
circle tail[max_tail_count];

//shapes and text initialization
textbox title(text="INFINITE SNAKE!", x=160, y=280);
textbox score(text="Score: " + (tail_count - 5), x=20, y=280);
textbox speed_box(text="Speed: " + speed, x=400, y=280);
circle head(user_int=1, user_int2=0, radius=15, blue=0.5, animation_block=move, drawing_order=2);
circle eye_1(radius=4,blue=0.3,green=0.65,red=0.4,drawing_order=3);
circle eye_2(radius=4,blue=0.3,green=0.65,red=0.4,drawing_order=3);
circle food(radius=5, red=0.9, green=0.5, blue=0.3, drawing_order=2);
rectangle box(x=25, y=10,w=box_w, h=box_h, blue=1.0,red=1.0,green=1.0,drawing_order=1);
rectangle frame(x=20, y=5,w=box_w+10, h=box_h+10, drawing_order=0);

//initializes the eye variables and tail values
initialization{
	head.x = edge_top/2;
	head.y = edge_right/2;
	eye_1.x = head.x + eye1_x;
	eye_1.y = head.y + eye1_y;
	eye_2.x = head.x + eye2_x;
	eye_2.y = head.y + eye2_y;

	//starting body initialization
	for(i = 0; i < tail_count; i++){
		tail[i].x = head.x - i;
		tail[i].y = head.y - i;
		tail[i].radius = 15;
		tail[i].drawing_order = 2;
		tail[i].blue = 0.75;
		tail[i].green = 0.5;
	}

	//rest of the body initialization 
	for(i = tail_count - 1; i < max_tail_count; i++){
		tail[i].x = head.x;
		tail[i].y = head.y;
		tail[i].radius = 15;
		tail[i].drawing_order = 0;
		tail[i].blue = 0.75;
		tail[i].green = 0.5;
	}

	food.x = random(410) + 25;
	food.y = random(215) + 10;
}

//right arrow moves snake right side
on rightarrow{
	if(head.user_int2 != 0){
		head.user_int2 = 0;
		head.user_int = 1;
		eye1_x = 17;
		eye1_y = 21;
		eye2_x = 17;
	  eye2_y = 3;
	}	
}

//left arrow directs snake left side
on leftarrow{
	if(head.user_int2 != 0){
		head.user_int2 = 0;
		head.user_int = -1;
		eye1_x = 5;
		eye1_y = 21;
		eye2_x = 5;
	  eye2_y = 3;
	}
}

//up arrow directs snake up side
on uparrow{
	if(head.user_int != 0){
		head.user_int = 0;
		head.user_int2 = 1;
		eye1_x = 5;
		eye1_y = 21;
		eye2_x = 17;
	  eye2_y = 21;
	}
}

//down arrow directs snake down side
on downarrow{
		if(head.user_int != 0){
		head.user_int = 0;
		head.user_int2 = -1;
		eye1_x = 5;
		eye1_y = 3;
		eye2_x = 17;
		eye2_y = 3;
	}
}

//manual speed up overide
on hkey{
	speed++;
	speed_box.text = "Speed: " + speed;
}

//manual speed down overide
on lkey{
  if (speed > 0){
	  speed--;
  	speed_box.text = "Speed: " + speed;
  }
}

//animation function
animation move(circle head){

	head.x += head.user_int * speed;
	head.y += head.user_int2 * speed;

	//sets the eye positions
	eye_1.x = head.x + eye1_x;
	eye_1.y = head.y + eye1_y;
	eye_2.x = head.x + eye2_x;
	eye_2.y = head.y + eye2_y;

	//teleports the snake on the other side of edge
	if(head.x >= edge_right && head.user_int == 1){
		head.x = edge_left;
	}
	if(head.x <= edge_left && head.user_int == -1){
		head.x = edge_right;
	}
	if(head.y <= edge_bottom && head.user_int2 == -1){
		head.y = edge_top;
	}
	if(head.y >= edge_top && head.user_int2 == 1){
		head.y = edge_bottom;
	}
	eye_1.x = head.x + eye1_x;
	eye_1.y = head.y + eye1_y;
	eye_2.x = head.x + eye2_x;
	eye_2.y = head.y + eye2_y;

	//snake food and speed 
	if (head touches food){
		food.x = random(410) + 25;
		food.y = random(215) + 10;
		tail_count++;
		//tail[tail_count-1].x = tail[tail_count-2].x - 1;
		//tail[tail_count-1].y = tail[tail_count-2].y - 1;
		score.text = "Score: " + (tail_count - 5);
		if(tail_count%5 == 0 && tail_count > 5){
			speed++;
			speed_box.text = "Speed: " + speed;
		}
	}

	//tail follows the head
	tail[counter%tail_count].x = head.x;
	tail[counter%tail_count].y = head.y;

	if (tail[counter%tail_count].drawing_order == 0){
		tail[counter%tail_count].drawing_order = 2;
	}

	counter += 1;
}











